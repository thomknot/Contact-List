package com.orion.contacts;

import com.orion.contacts.R;
import android.app.Activity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.TreeMap;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.ListActivity;
import android.content.Intent;
import android.os.AsyncTask;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;








public class MainActivity extends ListActivity {
	
	private ProgressBar progressBar1;

	private static String url = "http://api.androidhive.info/contacts/";

	
	private static final String TAG_CONTACTS = "contacts";
	private static final String TAG_ID = "id";
	private static final String TAG_NAME = "name";
	private static final String TAG_EMAIL = "email";
	private static final String TAG_ADDRESS = "address";
	private static final String TAG_GENDER = "gender";
	private static final String TAG_PHONE = "phone";
	private static final String TAG_PHONE_MOBILE = "mobile";
	private static final String TAG_PHONE_HOME = "home";
	private static final String TAG_PHONE_OFFICE = "office";

	JSONArray contacts = null;

	ArrayList<TreeMap<String, String>> contactList;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
    	switch (item.getItemId()) {
        case R.id.A2Z:
        {
        	
		    Toast savedToast = Toast.makeText(getApplicationContext(), 
		        "Sorting A - Z", Toast.LENGTH_SHORT);
		    savedToast.show();
		    new GetContacts().execute();
		    
		    
		    
		    Collections.sort(contactList, new Comparator<TreeMap<String, String>>()
					{
					    @Override
					    public int compare(TreeMap<String, String> a, TreeMap<String, String> b)
					    {
					        return a.get(TAG_NAME).compareTo(b.get(TAG_NAME));
					    }
					});
           // newGame();}
        }
            return true;
        case R.id.Z2A:
        	
        {
        	
        	 Toast savedToast = Toast.makeText(getApplicationContext(), 
     		        "Sorting Z -A", Toast.LENGTH_SHORT);
     		    savedToast.show();
     		    
     		    
     		    
     		   new GetContacts().execute();
   		    
   		    
   		    
   		    Collections.sort(contactList, new Comparator<TreeMap<String, String>>()
   					{
   					    @Override
   					    public int compare(TreeMap<String, String> a, TreeMap<String, String> b)
   					    {
   					        return b.get(TAG_NAME).compareTo(a.get(TAG_NAME));
   					    }
   					});
        	
        }
            //showHelp();
            return true;
        default:
		
		}
		return super.onOptionsItemSelected(item);
    }



    private class GetContacts extends AsyncTask<Void, Void, Void> {

		@Override
		protected void onPreExecute() {
			super.onPreExecute();
			// Showing progress dialog
			
			
			/*pDialog = new ProgressDialog(MainActivity.this);
			pDialog.setMessage("Please wait...");
			pDialog.setCancelable(false);
			pDialog.show();*/

			
			progressBar1.setVisibility(View.VISIBLE);
		}

		@Override
		protected Void doInBackground(Void... arg0) {
			// Creating service handler class instance
			ServiceHandler sh = new ServiceHandler();

			// Making a request to url and getting response
			String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);

			Log.d("Response: ", "> " + jsonStr);

			if (jsonStr != null) {
				try {
					JSONObject jsonObj = new JSONObject(jsonStr);
					
					// Getting JSON Array node
					contacts = jsonObj.getJSONArray(TAG_CONTACTS);

					// looping through All Contacts
					for (int i = 0; i < contacts.length(); i++) {
						JSONObject c = contacts.getJSONObject(i);
						
						String id = c.getString(TAG_ID);
						String name = c.getString(TAG_NAME);
						String email = c.getString(TAG_EMAIL);
						String address = c.getString(TAG_ADDRESS);
						String gender = c.getString(TAG_GENDER);

						// Phone node is JSON Object
						JSONObject phone = c.getJSONObject(TAG_PHONE);
						String mobile = phone.getString(TAG_PHONE_MOBILE);
						String home = phone.getString(TAG_PHONE_HOME);
						String office = phone.getString(TAG_PHONE_OFFICE);

						// tmp hashmap for single contact
						TreeMap<String, String> contact = new TreeMap<String, String>();

						
						
						
						// adding each child node to HashMap key => value
						contact.put(TAG_ID, id);
						contact.put(TAG_NAME, name);
					    contact.put(TAG_EMAIL, email);
						contact.put(TAG_PHONE_MOBILE, mobile);
						contact.put(TAG_GENDER, gender);
						// adding contact to contact list
						contactList.add(contact);
						
						
					}
				} catch (JSONException e) {
					e.printStackTrace();
				}
			} else {
				Log.e("ServiceHandler", "Couldn't get any data from the url");
			}

			return null;
		}

		@Override
		protected void onPostExecute(Void result) {
			super.onPostExecute(result);
			// Dismiss the progress dialog
		/*	if (pDialog.isShowing())
				pDialog.dismiss();
			*/
			 if(progressBar1.isShown())
				progressBar1.setVisibility(View.GONE);
			
			/**
			 * Updating parsed JSON data into ListView
			 * */
			ListAdapter adapter1 = new SimpleAdapter(
					MainActivity.this, contactList,
					R.layout.list_item, new String[] { TAG_NAME, TAG_EMAIL,
							TAG_PHONE_MOBILE, TAG_GENDER }, new int[] { R.id.name,
							R.id.email, R.id.mobile, R.id.gender });
			

			setListAdapter(adapter1);
			
			/*Collections.sort(contactList, new Comparator<TreeMap<String, String>>()
					{
					    @Override
					    public int compare(TreeMap<String, String> a, TreeMap<String, String> b)
					    {
					        return b.get(TAG_NAME).compareTo(a.get(TAG_NAME));
					    }
					});*/
			
			
		}

	}


}
