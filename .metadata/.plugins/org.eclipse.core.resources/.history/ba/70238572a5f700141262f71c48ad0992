package com.orion.contacts;

import com.orion.contacts.R;
import android.app.Activity;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.TreeMap;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.ListActivity;
import android.content.Intent;
import android.os.AsyncTask;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;








public class MainActivity extends ListActivity {
	
	private ProgressBar progressBar1;

	//private static String url = "http://api.androidhive.info/contacts/";
	private static String url = "http://jsonplaceholder.typicode.com/users/";

	
//	private static final String TAG_CONTACTS = "";
	private static final String TAG_ID = "id";
	private static final String TAG_NAME = "name";
	private static final String TAG_USERNAME = "username";
	private static final String TAG_EMAIL = "email";
	private static final String TAG_ADDRESS = "address";
	private static final String TAG_STREET = "street";
	private static final String TAG_SUITE = "suite";
	private static final String TAG_CITY = "city";
	private static final String TAG_ZIPCODE = "zipcode";
	private static final String TAG_GEO = "geo";
	private static final String TAG_LAT = "lat";
	private static final String TAG_LONG = "long";
	private static final String TAG_PHONE = "phone";
	private static final String TAG_WEBSITE = "website";
	private static final String TAG_COMPANY = "company";
	private static final String TAG_COMPANY_NAME = "name";
	private static final String TAG_CATCHPHRASE = "catchphrase";
	private static final String TAG_BS = "bs";

	JSONArray contacts = null;

	ArrayList<TreeMap<String, String>> contactList;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        
        
        progressBar1 = (ProgressBar) findViewById(R.id.progressBar1);
        progressBar1.setVisibility(View.GONE);
		
		contactList = new ArrayList<TreeMap<String, String>>();

		ListView lv = getListView();

		// Listview on item click listener
		lv.setOnItemClickListener(new OnItemClickListener() {
			
			
			

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				// getting values from selected ListItem
				String name = ((TextView) view.findViewById(R.id.name))
						.getText().toString();
				String email = ((TextView) view.findViewById(R.id.email))
						.getText().toString();
				String phone = ((TextView) view.findViewById(R.id.phone))
						.getText().toString();
				String username =((TextView) view.findViewById(R.id.username))
						.getText().toString();

				// Starting single contact activity    REQUIRED TO PASS TO SINGLE
				Intent in = new Intent(getApplicationContext(),
						DetailedContact.class);
				in.putExtra(TAG_NAME, name);
				in.putExtra(TAG_EMAIL, email);
				in.putExtra(TAG_PHONE, phone);
				in.putExtra(TAG_USERNAME, username);
				startActivity(in);

			}
		});

		// Calling async task to get json	
		new GetContacts().execute();
        
        
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
    	switch (item.getItemId()) {
        case R.id.A2Z:
        {
        	
		    Toast savedToast = Toast.makeText(getApplicationContext(), 
		        "Sorting A - Z", Toast.LENGTH_SHORT);
		    savedToast.show();
		    new GetContacts().execute();
		    
		    
		    
		    Collections.sort(contactList, new Comparator<TreeMap<String, String>>()
					{
					    @Override
					    public int compare(TreeMap<String, String> a, TreeMap<String, String> b)
					    {
					        return a.get(TAG_NAME).compareTo(b.get(TAG_NAME));
					    }
					});
           // newGame();}
        }
            return true;
        case R.id.Z2A:
        	
        {
        	
        	 Toast savedToast = Toast.makeText(getApplicationContext(), 
     		        "Sorting Z -A", Toast.LENGTH_SHORT);
     		    savedToast.show();
     		    
     		    
     		    
     		   new GetContacts().execute();
   		    
   		    
   		    
   		    Collections.sort(contactList, new Comparator<TreeMap<String, String>>()
   					{
   					    @Override
   					    public int compare(TreeMap<String, String> a, TreeMap<String, String> b)
   					    {
   					        return b.get(TAG_NAME).compareTo(a.get(TAG_NAME));
   					    }
   					});
        	
        }
            //showHelp();
            return true;
        default:
		
		}
		return super.onOptionsItemSelected(item);
    }



    private class GetContacts extends AsyncTask<Void, Void, Void> {

		@Override
		protected void onPreExecute() {
			super.onPreExecute();
			// Showing progress animation
			
			
			progressBar1.setVisibility(View.VISIBLE);
		}

		@Override
		protected Void doInBackground(Void... arg0) {
			// Creating service handler class instance
			ServiceHandler sh = new ServiceHandler();

			// Making a request to url and getting response
			String jsonStr = sh.makeServiceCall(url, ServiceHandler.GET);

			//JSONArray jsonStr = sh.getJSONFromUrl(url);
			Log.d("Response: ", "> " + jsonStr);

			if (jsonStr != null) {
				try {
					JSONArray contacts = new JSONArray(jsonStr);
					
					// Getting JSON Array node
					//contacts = jsonObj.getJSONArray(TAG_CONTACTS);

					// looping through All Contacts
					for (int i = 0; i < contacts.length(); i++) {
						JSONObject c = contacts.getJSONObject(i);
						
						String id = c.getString(TAG_ID);
						String name = c.getString(TAG_NAME);
						String username = c.getString(TAG_USERNAME);
						String email = c.getString(TAG_EMAIL);
						
						
						// Phone node is JSON Object
						JSONObject address = c.getJSONObject(TAG_ADDRESS);
						String street = address.getString(TAG_STREET);
						String suite = address.getString(TAG_SUITE);
						String city = address.getString(TAG_CITY);
						String zipcode = address.getString(TAG_ZIPCODE);
						
						JSONObject geo = c.getJSONObject(TAG_GEO);
						String lat = geo.getString(TAG_LAT);
						String glong = geo.getString(TAG_LONG);
						
						
						String phone = c.getString(TAG_PHONE);
						String website = c.getString(TAG_WEBSITE);
						
						JSONObject company = c.getJSONObject(TAG_COMPANY);
						String company_name = company.getString(TAG_COMPANY_NAME);
						String catchphrase = company.getString(TAG_CATCHPHRASE);
						String bs = company.getString(TAG_BS);
						
						

						// tmp hashmap for single contact
						TreeMap<String, String> contact = new TreeMap<String, String>();

						
						
						
						// adding each child node to HashMap key => value
						contact.put(TAG_ID, id);
						contact.put(TAG_NAME, name);
					    contact.put(TAG_EMAIL, email);
						//contact.put(TAG_PHONE, phone);
						contact.put(TAG_USERNAME, username);
						// adding contact to contact list
						contactList.add(contact);
						
						
					}
				} catch (JSONException e) {
					e.printStackTrace();
				}
			} else {
				Log.e("ServiceHandler", "Couldn't get any data from the url");
			}

			return null;
		}

		@Override
		protected void onPostExecute(Void result) {
			super.onPostExecute(result);
			// Dismiss the progress dialog
		
			 if(progressBar1.isShown())
				progressBar1.setVisibility(View.GONE);
			
			/**
			 * Updating parsed JSON data into ListView
			 * */
			ListAdapter adapter1 = new SimpleAdapter(
					MainActivity.this, contactList,
					R.layout.list_item, new String[] { TAG_NAME, TAG_EMAIL,
							/*TAG_PHONE, */TAG_USERNAME }, new int[] { R.id.name,
							R.id.email, /*R.id.phone,*/ R.id.username });
			

			setListAdapter(adapter1);
			
			
			
			
		}

	}


}
